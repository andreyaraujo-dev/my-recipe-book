name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuração do .NET Core
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Ajuste para a versão do seu projeto

      # Restauração das dependências
      - name: Install dependencies
        run: dotnet restore

      # Build do projeto
      - name: Build
        run: dotnet build --no-restore

      # Execução dos testes
      - name: Run tests
        run: |
          dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./test-results
        shell: pwsh

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
        shell: pwsh

      - name: Convert coverage to OpenCover format
        run: |
          reportgenerator -reports:./test-results/**/coverage.cobertura.xml -targetdir:./test-results/coverage -reporttypes:opencover
        shell: pwsh

      # Salvar os artefatos para análise no SonarCloud
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"andreyaraujo-dev_my-recipe-book" /o:"andreyaraujo" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=./test-results/**/coverage.opencover.xml
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
