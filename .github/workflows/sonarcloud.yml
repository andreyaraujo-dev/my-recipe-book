name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuração do .NET Core
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Ajuste para a versão do seu projeto

      # Restauração das dependências
      - name: Install dependencies
        run: dotnet restore

      # Build do projeto
      - name: Build
        run: dotnet build --no-restore

      # Execução dos testes
      - name: Run tests
        run: |
          dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./test-results
        shell: pwsh

      # Salvar os artefatos para análise no SonarCloud
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results

  sonarcloud-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download dos resultados dos testes
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results

      # Configuração do .NET Core
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0' # Ajuste para a versão do seu projeto

      # Análise do SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
